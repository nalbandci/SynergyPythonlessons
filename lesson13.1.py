# –ó–∞–¥–∞—á–∞: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–≤—É—Ö –º–∞—Ç—Ä–∏—Ü —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ —Å –≤–≤–æ–¥–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –∏—Ö —Å–ª–æ–∂–µ–Ω–∏–µ
import random

def create_matrix(rows, cols):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –º–∞—Ç—Ä–∏—Ü—É –∑–∞–¥–∞–Ω–Ω–æ–π —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –æ—Ç -100 –¥–æ 100"""
    return [[random.randint(-100, 100) for _ in range(cols)] for _ in range(rows)]

def add_matrices(matrix1, matrix2):
    """–°–∫–ª–∞–¥—ã–≤–∞–µ—Ç –¥–≤–µ –º–∞—Ç—Ä–∏—Ü—ã –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏"""
    if len(matrix1) != len(matrix2) or len(matrix1[0]) != len(matrix2[0]):
        raise ValueError("–û—à–∏–±–∫–∞: –º–∞—Ç—Ä–∏—Ü—ã –∏–º–µ—é—Ç —Ä–∞–∑–Ω—ã–π —Ä–∞–∑–º–µ—Ä!")
    return [
        [matrix1[i][j] + matrix2[i][j] for j in range(len(matrix1[0]))]
        for i in range(len(matrix1))
    ]

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
print("üåê –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ —Å–ª–æ–∂–µ–Ω–∏—è –º–∞—Ç—Ä–∏—Ü üåê")
print("‚Ä¢ –í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã –º–∞—Ç—Ä–∏—Ü ‚Ä¢")

# –í–≤–æ–¥ —Ä–∞–∑–º–µ—Ä–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
def get_positive_integer(prompt):
    while True:
        try:
            value = int(input(prompt))
            if value <= 0:
                print("–û—à–∏–±–∫–∞: —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0!")
                continue
            return value
        except ValueError:
            print("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!")

rows = get_positive_integer("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: ")
cols = get_positive_integer("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤: ")

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∞—Ç—Ä–∏—Ü
print("\nüî∑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–µ—Ä–≤—É—é –º–∞—Ç—Ä–∏—Ü—É...")
matrix_1 = create_matrix(rows, cols)
print("‚úÖ –ü–µ—Ä–≤–∞—è –º–∞—Ç—Ä–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞!")

print("\nüî∑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –≤—Ç–æ—Ä—É—é –º–∞—Ç—Ä–∏—Ü—É...")
matrix_2 = create_matrix(rows, cols)
print("‚úÖ –í—Ç–æ—Ä–∞—è –º–∞—Ç—Ä–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞!")

# –í—ã–≤–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Ç—Ä–∏—Ü
def print_matrix(matrix, name):
    print(f"\nüìä –ú–∞—Ç—Ä–∏—Ü–∞ {name}:")
    for i, row in enumerate(matrix, 1):
        print(f"–°—Ç—Ä–æ–∫–∞ {i:2}: {', '.join(map(str, row))}")

print_matrix(matrix_1, "A")
print_matrix(matrix_2, "B")

# –°–ª–æ–∂–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü –∏ –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
print("\nüßÆ –°–∫–ª–∞–¥—ã–≤–∞—é –º–∞—Ç—Ä–∏—Ü—ã...")
try:
    matrix_3 = add_matrices(matrix_1, matrix_2)
    print_matrix(matrix_3, "—Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–ª–æ–∂–µ–Ω–∏—è (A + B)")
except ValueError as e:
    print(f"\n‚ùå {e}")

print("\n" + "="*50 + "\n‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")